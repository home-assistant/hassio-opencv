# https://dev.azure.com/home-assistant

trigger:
  tags:
    include:
    - '*'
pr: none
variables:
  - name: versionWheels
    value: '1.12.4-3.8-alpine3.12'
resources:
  repositories:
    - repository: azure
      type: github
      name: 'home-assistant/ci-azure'
      endpoint: 'home-assistant'

jobs:
- template: templates/azp-job-wheels.yaml@azure
  parameters:
    builderVersion: '$(versionWheels)'
    builderApk: 'g++;gcc;file;make;musl-dev;cmake;git;linux-headers;libffi-dev;openssl-dev;eudev-dev;libxml2-dev;libxslt-dev;libpng-dev;libjpeg-turbo-dev;tiff-dev;autoconf;automake;gmp-dev;mpfr-dev;mpc1-dev;ffmpeg-dev;libwebp-dev'
    builderPip: 'Cython;numpy'
    builderPath: 'opencv-python'
    builderEnvFile: true
    wheelsLocal: true
    preBuild:
    - script: |
        version="$(head -n 1 requirements.txt)"
        git clone --depth 1 --recurse-submodules -b "${version##*.}" https://github.com/skvark/opencv-python

        echo "ENABLE_HEADLESS=1" > .env_file
        if [[ "$(buildArch)" =~ arm ]]; then
          echo 'CMAKE_ARGS="-DENABLE_NEON=OFF -DCPU_BASELINE_REQUIRE="' >> .env_file
        fi

        # Fix not working patch with pip
        if [[ "$(buildArch)" =~ (arm|i386) ]]; then
          patch -d opencv-python -p0 < opencv-python/patches/patchOpenEXR
          sed -i "/patches\/patchOpenEXR/d" opencv-python/setup.py
        fi
        
        # Fix git
        sed -i "s/package_version = get_opencv_version()/package_version = \"${version##*=}\"/" opencv-python/setup.py
        rm -rf opencv-python/.git
      displayName: 'Setup opencv-python'
